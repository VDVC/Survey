%!PS-Adobe-2.0 EPSF-2.0
%%Title: plots/vgl/einstiegsalter.eps
%%Creator: gnuplot 5.0 patchlevel 1
%%CreationDate: Sat Jan  2 14:29:34 2016
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 503 305
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 20.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -106 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 503 50 lineto 503 305 lineto 50 305 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.0 (Dec 2014)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
%
% Base ISO8859-1 character encoding plus support macros for UTF-8 encoding
% via the glyphshow operator
%
/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
currentdict /CharStrings known {
	CharStrings /Idieresis known {
		/Encoding ISOLatin1Encoding def } if
} if
currentdict end definefont
} def
/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def

/Gshow { dup type /stringtype eq { show } { glyphshow } ifelse } def

/Gsall { {Gshow} forall } def
/Gwidth {
	dup currentpoint pop exch
	gsave 6 array currentmatrix nulldevice setmatrix Gsall currentpoint pop grestore sub
	} def
/GLshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray Gsall grestore} {Gsall} ifelse} def
/GRshow {currentpoint stroke M dup Gwidth vshift R
	Blacktext {gsave 0 setgray Gsall grestore} {Gsall} ifelse} def
/GCshow {currentpoint stroke M dup Gwidth 2 div vshift R 
	Blacktext {gsave 0 setgray Gsall grestore} {Gsall} ifelse} def
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
/Helvetica reencodeISO def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (plots/vgl/einstiegsalter.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.0 patchlevel 1)
  /Author (schoenfeldt)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat Jan  2 14:29:34 2016)
  /DOCINFO pdfmark
end
} ifelse
end
%
% Support for boxed text - Ethan A Merritt May 2005
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { Boxing
    { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if } def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox 1 1 1 setrgbcolor fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 320 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 9070.00 5102.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
1376 1024 M
63 0 V
7054 0 R
-63 0 V
stroke
1184 1024 M
[ [(Helvetica) 320.0 0.0 true true 0 ( 0)]
] -106.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
1376 1803 M
63 0 V
7054 0 R
-63 0 V
stroke
1184 1803 M
[ [(Helvetica) 320.0 0.0 true true 0 ( 5)]
] -106.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
1376 2583 M
63 0 V
7054 0 R
-63 0 V
stroke
1184 2583 M
[ [(Helvetica) 320.0 0.0 true true 0 ( 10)]
] -106.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
1376 3362 M
63 0 V
7054 0 R
-63 0 V
stroke
1184 3362 M
[ [(Helvetica) 320.0 0.0 true true 0 ( 15)]
] -106.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
1376 4141 M
63 0 V
7054 0 R
-63 0 V
stroke
1184 4141 M
[ [(Helvetica) 320.0 0.0 true true 0 ( 20)]
] -106.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
2106 1024 M
0 63 V
0 3054 R
0 -63 V
stroke
2106 704 M
[ [(Helvetica) 320.0 0.0 true true 0 ( 5)]
] -106.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
3018 1024 M
0 63 V
0 3054 R
0 -63 V
stroke
3018 704 M
[ [(Helvetica) 320.0 0.0 true true 0 ( 10)]
] -106.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
3931 1024 M
0 63 V
0 3054 R
0 -63 V
stroke
3931 704 M
[ [(Helvetica) 320.0 0.0 true true 0 ( 15)]
] -106.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
4843 1024 M
0 63 V
0 3054 R
0 -63 V
stroke
4843 704 M
[ [(Helvetica) 320.0 0.0 true true 0 ( 20)]
] -106.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
5756 1024 M
0 63 V
0 3054 R
0 -63 V
stroke
5756 704 M
[ [(Helvetica) 320.0 0.0 true true 0 ( 25)]
] -106.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
6668 1024 M
0 63 V
0 3054 R
0 -63 V
stroke
6668 704 M
[ [(Helvetica) 320.0 0.0 true true 0 ( 30)]
] -106.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
7581 1024 M
0 63 V
0 3054 R
0 -63 V
stroke
7581 704 M
[ [(Helvetica) 320.0 0.0 true true 0 ( 35)]
] -106.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
8493 1024 M
0 63 V
0 3054 R
0 -63 V
stroke
8493 704 M
[ [(Helvetica) 320.0 0.0 true true 0 ( 40)]
] -106.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCb setrgbcolor
1376 4141 N
0 -3117 V
7117 0 V
0 3117 V
-7117 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
256 2582 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 320.0 0.0 true true 0 (Anteil %)]
] -106.7 MCshow
grestore
LTb
LCb setrgbcolor
4934 224 M
[ [(Helvetica) 320.0 0.0 true true 0 (Alter / a)]
] -106.7 MCshow
LTb
LCb setrgbcolor
4934 4621 M
[ [(Helvetica) 320.0 0.0 true true 0 (Einstiegsalter)]
] -106.7 MCshow
% Begin plot #1
1.000 UP
1.000 UL
LTb
0.58 0.00 0.83 C LCb setrgbcolor
7086 3918 M
[ [(Helvetica) 320.0 0.0 true true 0 (2013 \(N=1405\))]
] -106.7 MRshow
1.000 UP
1.000 UL
LTb
0.58 0.00 0.83 C 7278 3918 M
831 0 V
1376 1024 M
0 22 V
182 0 R
0 45 V
183 145 R
0 109 V
182 259 R
0 171 V
183 300 R
0 227 V
182 805 R
0 315 V
2471 2403 M
0 259 V
182 -4 R
0 281 V
183 -980 R
0 215 V
182 134 R
0 250 V
183 -630 R
0 211 V
182 -180 R
0 215 V
183 -570 R
0 171 V
182 -78 R
0 185 V
183 -505 R
0 137 V
182 -268 R
0 111 V
183 -229 R
0 80 V
182 -70 R
0 83 V
183 -166 R
0 49 V
182 24 R
0 80 V
183 -145 R
0 55 V
182 -27 R
0 66 V
183 -119 R
0 38 V
182 -13 R
0 55 V
183 -63 R
0 49 V
182 -58 R
0 45 V
183 -45 R
0 45 V
182 -61 R
0 32 V
183 1 R
0 55 V
182 -72 R
0 45 V
183 -53 R
0 38 V
182 -38 R
0 38 V
183 -38 R
0 38 V
182 -46 R
0 32 V
183 -32 R
0 32 V
182 -38 R
0 22 V
183 -22 R
182 0 R
0 22 V
183 -22 R
182 0 R
1376 1035 Pls
1558 1068 Pls
1741 1290 Pls
1923 1690 Pls
2106 2189 Pls
2288 3265 Pls
2471 2533 Pls
2653 2799 Pls
2836 2067 Pls
3018 2433 Pls
3201 2033 Pls
3383 2067 Pls
3566 1690 Pls
3748 1789 Pls
3931 1446 Pls
4113 1301 Pls
4296 1168 Pls
4478 1179 Pls
4661 1079 Pls
4843 1168 Pls
5026 1091 Pls
5208 1124 Pls
5391 1057 Pls
5573 1091 Pls
5756 1079 Pls
5938 1068 Pls
6121 1068 Pls
6303 1046 Pls
6486 1091 Pls
6668 1068 Pls
6851 1057 Pls
7033 1057 Pls
7216 1057 Pls
7398 1046 Pls
7581 1046 Pls
7763 1035 Pls
7946 1024 Pls
8128 1035 Pls
8311 1024 Pls
8493 1024 Pls
7693 3918 Pls
% End plot #1
% Begin plot #2
1.000 UP
1.000 UL
LTb
0.34 0.71 0.91 C LCb setrgbcolor
7086 3598 M
[ [(Helvetica) 320.0 0.0 true true 0 (2014 \(N=4073\))]
] -106.7 MRshow
1.000 UP
1.000 UL
LTb
0.34 0.71 0.91 C 7278 3598 M
831 0 V
1376 1026 M
0 11 V
182 46 R
0 35 V
183 160 R
0 66 V
182 399 R
0 108 V
183 310 R
0 136 V
182 952 R
0 188 V
183 -641 R
0 168 V
182 -82 R
0 172 V
183 -971 R
0 132 V
182 338 R
0 157 V
183 -875 R
0 115 V
182 52 R
0 126 V
183 -507 R
0 99 V
182 -169 R
0 94 V
183 -349 R
0 68 V
182 -147 R
0 58 V
183 -147 R
0 44 V
182 -92 R
0 33 V
183 -30 R
0 35 V
182 -38 R
0 33 V
183 -60 R
0 26 V
182 -19 R
0 28 V
183 -56 R
0 15 V
182 10 R
0 26 V
183 -39 R
0 21 V
182 -18 R
0 23 V
183 -41 R
0 13 V
182 -18 R
0 8 V
183 0 R
0 15 V
182 -23 R
0 8 V
183 -6 R
0 11 V
182 1 R
0 18 V
183 -24 R
0 15 V
182 -12 R
0 17 V
365 -23 R
0 13 V
183 -16 R
0 11 V
182 -13 R
0 8 V
365 0 R
0 15 V
1376 1032 Star
1558 1101 Star
1741 1311 Star
1923 1797 Star
2106 2229 Star
2288 3343 Star
2471 2880 Star
2653 2968 Star
2836 2149 Star
3018 2631 Star
3201 1893 Star
3383 2065 Star
3566 1671 Star
3748 1598 Star
3931 1330 Star
4113 1246 Star
4296 1150 Star
4478 1097 Star
4661 1101 Star
4843 1097 Star
5026 1066 Star
5208 1074 Star
5391 1039 Star
5573 1070 Star
5756 1055 Star
5938 1058 Star
6121 1035 Star
6303 1028 Star
6486 1039 Star
6668 1028 Star
6851 1032 Star
7033 1047 Star
7216 1039 Star
7398 1043 Star
7763 1035 Star
7946 1032 Star
8128 1028 Star
8493 1039 Star
7693 3598 Star
% End plot #2
% Begin plot #3
1.000 UP
1.000 UL
LTb
0.90 0.62 0.00 C LCb setrgbcolor
7086 3278 M
[ [(Helvetica) 320.0 0.0 true true 0 (2015 \(N=1374\))]
] -106.7 MRshow
1.000 UP
1.000 UL
LTb
0.90 0.62 0.00 C 7278 3278 M
831 0 V
1376 1055 M
0 51 V
182 -4 R
0 71 V
183 78 R
0 113 V
182 263 R
0 177 V
183 510 R
0 254 V
182 727 R
0 332 V
2471 2455 M
0 266 V
182 -81 R
0 282 V
183 -813 R
0 233 V
182 -39 R
0 253 V
183 -716 R
0 204 V
182 -225 R
0 201 V
183 -436 R
0 172 V
182 -382 R
0 138 V
183 -138 R
0 138 V
182 -271 R
0 111 V
183 -212 R
0 85 V
182 -133 R
0 68 V
183 -77 R
0 64 V
182 -74 R
0 60 V
365 -69 R
0 56 V
183 -56 R
0 56 V
182 -73 R
0 45 V
183 -54 R
0 40 V
182 -40 R
0 40 V
183 -23 R
0 51 V
182 -68 R
0 40 V
183 -54 R
0 23 V
182 -16 R
0 32 V
183 -32 R
0 32 V
182 -39 R
0 23 V
365 17 R
0 56 V
183 -96 R
0 23 V
182 -9 R
0 40 V
183 -54 R
0 23 V
365 -16 R
0 32 V
182 -39 R
0 23 V
1376 1081 Box
1558 1137 Box
1741 1307 Box
1923 1715 Box
2106 2441 Box
2288 3461 Box
2471 2588 Box
2653 2781 Box
2836 2225 Box
3018 2429 Box
3201 1942 Box
3383 1919 Box
3566 1670 Box
3748 1443 Box
3931 1443 Box
4113 1296 Box
4296 1183 Box
4478 1126 Box
4661 1115 Box
4843 1103 Box
5208 1092 Box
5391 1092 Box
5573 1069 Box
5756 1058 Box
5938 1058 Box
6121 1081 Box
6303 1058 Box
6486 1035 Box
6668 1047 Box
6851 1047 Box
7033 1035 Box
7398 1092 Box
7581 1035 Box
7763 1058 Box
7946 1035 Box
8311 1047 Box
8493 1035 Box
7693 3278 Box
% End plot #3
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCb setrgbcolor
1376 4141 N
0 -3117 V
7117 0 V
0 3117 V
-7117 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
